{"ast":null,"code":"var _jsxFileName = \"/Users/rupeshkumarsingh/Downloads/Gps-frontend/webadmin/src/pages/ManageAdmins.js\",\n  _s = $RefreshSig$();\n// // src/pages/ManageAdmins.js\n// import { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function ManageAdmins() {\n//   const [admins, setAdmins] = useState([]);\n//   const [schools, setSchools] = useState([]);\n//   const [form, setForm] = useState({ username: \"\", password: \"\", school_id: \"\" });\n//   const [editId, setEditId] = useState(null);\n//   const [deleteId, setDeleteId] = useState(null);\n//   const token = localStorage.getItem(\"token\");\n//   const role = localStorage.getItem(\"role\");\n\n//   const headers = { Authorization: `Bearer ${token}` };\n\n//   useEffect(() => {\n//     if (role === \"superadmin\") {\n//       fetchAdmins();\n//       fetchSchools();\n//     }\n//   }, []);\n\n//   const fetchAdmins = async () => {\n//     try {\n//       const res = await axios.get(\"https://gps.smartbus360.com/api/schooladmins\", { headers });\n//       setAdmins(res.data);\n//     } catch (err) {\n//       console.error(\"Error fetching admins:\", err);\n//     }\n//   };\n\n//   const fetchSchools = async () => {\n//     try {\n//       const res = await axios.get(\"https://gps.smartbus360.com/api/schools\", { headers });\n//       setSchools(res.data);\n//     } catch (err) {\n//       console.error(\"Error fetching schools:\", err);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editId) {\n//         await axios.put(\n//           `https://gps.smartbus360.com/api/schooladmins/${editId}`,\n//           form,\n//           { headers }\n//         );\n//       } else {\n//         await axios.post(\"https://gps.smartbus360.com/api/schooladmins\", form, { headers });\n//       }\n//       setForm({ username: \"\", password: \"\", school_id: \"\" });\n//       setEditId(null);\n//       fetchAdmins();\n//     } catch (err) {\n//       console.error(\"Error saving admin:\", err);\n//     }\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       await axios.delete(`https://gps.smartbus360.com/api/schooladmins/${deleteId}`, { headers });\n//       setDeleteId(null);\n//       fetchAdmins();\n//     } catch (err) {\n//       console.error(\"Error deleting admin:\", err);\n//     }\n//   };\n\n//   const handleEdit = (admin) => {\n//     const school = schools.find((s) => s.name === admin.school_name);\n//     setForm({\n//       username: admin.username,\n//       password: \"\",\n//       school_id: school ? school.id : \"\",\n//     });\n//     setEditId(admin.id);\n//   };\n\n//   if (role !== \"superadmin\") {\n//     return <p className=\"text-red-600\">‚ö†Ô∏è Only Superadmin can manage admins.</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 className=\"text-2xl font-bold mb-6\">üë®‚Äçüíº Manage School Admins</h1>\n\n//       {/* Add/Edit Form */}\n//       <form onSubmit={handleSubmit} className=\"mb-6 bg-gray-100 p-4 rounded\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={form.username}\n//           onChange={(e) => setForm({ ...form, username: e.target.value })}\n//           required\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder={editId ? \"New Password (optional)\" : \"Password\"}\n//           value={form.password}\n//           onChange={(e) => setForm({ ...form, password: e.target.value })}\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         />\n//         <select\n//           value={form.school_id}\n//           onChange={(e) => setForm({ ...form, school_id: e.target.value })}\n//           required\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         >\n//           <option value=\"\">Select School</option>\n//           {schools.map((s) => (\n//             <option key={s.id} value={s.id}>\n//               {s.name}\n//             </option>\n//           ))}\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n//           {editId ? \"Update\" : \"Add\"}\n//         </button>\n//       </form>\n\n//       {/* Admins Table */}\n//       <table className=\"min-w-full bg-white border rounded shadow\">\n//         <thead>\n//           <tr className=\"bg-gray-200 text-left\">\n//             <th className=\"py-2 px-4 border\">ID</th>\n//             <th className=\"py-2 px-4 border\">Username</th>\n//             <th className=\"py-2 px-4 border\">School</th>\n//             <th className=\"py-2 px-4 border\">Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {admins.map((admin) => (\n//             <tr key={admin.id}>\n//               <td className=\"py-2 px-4 border\">{admin.id}</td>\n//               <td className=\"py-2 px-4 border\">{admin.username}</td>\n//               <td className=\"py-2 px-4 border\">{admin.school_name}</td>\n//               <td className=\"py-2 px-4 border\">\n//                 <button\n//                   onClick={() => handleEdit(admin)}\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded mr-2\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => setDeleteId(admin.id)}\n//                   className=\"bg-red-600 text-white px-3 py-1 rounded\"\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Delete Modal */}\n//       {deleteId && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center\">\n//           <div className=\"bg-white p-6 rounded shadow-lg w-96\">\n//             <h2 className=\"text-xl font-semibold mb-4\">Confirm Delete</h2>\n//             <p className=\"mb-4\">Are you sure you want to delete this admin?</p>\n//             <div className=\"flex justify-end space-x-3\">\n//               <button\n//                 onClick={() => setDeleteId(null)}\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//               >\n//                 Cancel\n//               </button>\n//               <button\n//                 onClick={confirmDelete}\n//                 className=\"bg-red-600 text-white px-4 py-2 rounded\"\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// src/pages/ManageAdmins.js\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ManageAdmins.css\"; // ‚úÖ Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManageAdmins() {\n  _s();\n  const [admins, setAdmins] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n    school_id: \"\"\n  });\n  const [editId, setEditId] = useState(null);\n  const [deleteId, setDeleteId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const role = localStorage.getItem(\"role\");\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n  useEffect(() => {\n    if (role === \"superadmin\") {\n      fetchAdmins();\n      fetchSchools();\n    }\n  }, []);\n  const fetchAdmins = async () => {\n    try {\n      const res = await axios.get(\"https://gps.smartbus360.com/api/schooladmins\", {\n        headers\n      });\n      setAdmins(res.data);\n    } catch (err) {\n      console.error(\"Error fetching admins:\", err);\n    }\n  };\n  const fetchSchools = async () => {\n    try {\n      const res = await axios.get(\"https://gps.smartbus360.com/api/schools\", {\n        headers\n      });\n      setSchools(res.data);\n    } catch (err) {\n      console.error(\"Error fetching schools:\", err);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editId) {\n        await axios.put(`https://gps.smartbus360.com/api/schooladmins/${editId}`, form, {\n          headers\n        });\n      } else {\n        await axios.post(\"https://gps.smartbus360.com/api/schooladmins\", form, {\n          headers\n        });\n      }\n      setForm({\n        username: \"\",\n        password: \"\",\n        school_id: \"\"\n      });\n      setEditId(null);\n      fetchAdmins();\n    } catch (err) {\n      console.error(\"Error saving admin:\", err);\n    }\n  };\n  const confirmDelete = async () => {\n    try {\n      await axios.delete(`https://gps.smartbus360.com/api/schooladmins/${deleteId}`, {\n        headers\n      });\n      setDeleteId(null);\n      fetchAdmins();\n    } catch (err) {\n      console.error(\"Error deleting admin:\", err);\n    }\n  };\n  const handleEdit = admin => {\n    const school = schools.find(s => s.name === admin.school_name);\n    setForm({\n      username: admin.username,\n      password: \"\",\n      school_id: school ? school.id : \"\"\n    });\n    setEditId(admin.id);\n  };\n  if (role !== \"superadmin\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: \"\\u26A0\\uFE0F Only Superadmin can manage admins.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admins-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"\\uD83D\\uDC68\\u200D\\uD83D\\uDCBC Manage School Admins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editId ? \"‚úèÔ∏è Edit Admin\" : \"‚ûï Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: form.username,\n        onChange: e => setForm({\n          ...form,\n          username: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: editId ? \"New Password (optional)\" : \"Password\",\n        value: form.password,\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: form.school_id,\n        onChange: e => setForm({\n          ...form,\n          school_id: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select School\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), schools.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s.id,\n          children: s.name\n        }, s.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn primary\",\n        children: editId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), editId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setForm({\n            username: \"\",\n            password: \"\",\n            school_id: \"\"\n          });\n          setEditId(null);\n        },\n        className: \"btn secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), admins.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No admins found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-card\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"admins-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.school_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(admin),\n                className: \"btn edit\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDeleteId(admin.id),\n                className: \"btn delete\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, admin.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), deleteId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this admin?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDeleteId(null),\n            className: \"btn secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmDelete,\n            className: \"btn delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageAdmins, \"fG0eE5ZC35KwTrl+6cy408GZCM8=\");\n_c = ManageAdmins;\nvar _c;\n$RefreshReg$(_c, \"ManageAdmins\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","ManageAdmins","_s","admins","setAdmins","schools","setSchools","form","setForm","username","password","school_id","editId","setEditId","deleteId","setDeleteId","token","localStorage","getItem","role","headers","Authorization","fetchAdmins","fetchSchools","res","get","data","err","console","error","handleSubmit","e","preventDefault","put","post","confirmDelete","delete","handleEdit","admin","school","find","s","name","school_name","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","onClick","length","_c","$RefreshReg$"],"sources":["/Users/rupeshkumarsingh/Downloads/Gps-frontend/webadmin/src/pages/ManageAdmins.js"],"sourcesContent":["// // src/pages/ManageAdmins.js\n// import { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function ManageAdmins() {\n//   const [admins, setAdmins] = useState([]);\n//   const [schools, setSchools] = useState([]);\n//   const [form, setForm] = useState({ username: \"\", password: \"\", school_id: \"\" });\n//   const [editId, setEditId] = useState(null);\n//   const [deleteId, setDeleteId] = useState(null);\n//   const token = localStorage.getItem(\"token\");\n//   const role = localStorage.getItem(\"role\");\n\n//   const headers = { Authorization: `Bearer ${token}` };\n\n//   useEffect(() => {\n//     if (role === \"superadmin\") {\n//       fetchAdmins();\n//       fetchSchools();\n//     }\n//   }, []);\n\n//   const fetchAdmins = async () => {\n//     try {\n//       const res = await axios.get(\"https://gps.smartbus360.com/api/schooladmins\", { headers });\n//       setAdmins(res.data);\n//     } catch (err) {\n//       console.error(\"Error fetching admins:\", err);\n//     }\n//   };\n\n//   const fetchSchools = async () => {\n//     try {\n//       const res = await axios.get(\"https://gps.smartbus360.com/api/schools\", { headers });\n//       setSchools(res.data);\n//     } catch (err) {\n//       console.error(\"Error fetching schools:\", err);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editId) {\n//         await axios.put(\n//           `https://gps.smartbus360.com/api/schooladmins/${editId}`,\n//           form,\n//           { headers }\n//         );\n//       } else {\n//         await axios.post(\"https://gps.smartbus360.com/api/schooladmins\", form, { headers });\n//       }\n//       setForm({ username: \"\", password: \"\", school_id: \"\" });\n//       setEditId(null);\n//       fetchAdmins();\n//     } catch (err) {\n//       console.error(\"Error saving admin:\", err);\n//     }\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       await axios.delete(`https://gps.smartbus360.com/api/schooladmins/${deleteId}`, { headers });\n//       setDeleteId(null);\n//       fetchAdmins();\n//     } catch (err) {\n//       console.error(\"Error deleting admin:\", err);\n//     }\n//   };\n\n//   const handleEdit = (admin) => {\n//     const school = schools.find((s) => s.name === admin.school_name);\n//     setForm({\n//       username: admin.username,\n//       password: \"\",\n//       school_id: school ? school.id : \"\",\n//     });\n//     setEditId(admin.id);\n//   };\n\n//   if (role !== \"superadmin\") {\n//     return <p className=\"text-red-600\">‚ö†Ô∏è Only Superadmin can manage admins.</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 className=\"text-2xl font-bold mb-6\">üë®‚Äçüíº Manage School Admins</h1>\n\n//       {/* Add/Edit Form */}\n//       <form onSubmit={handleSubmit} className=\"mb-6 bg-gray-100 p-4 rounded\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={form.username}\n//           onChange={(e) => setForm({ ...form, username: e.target.value })}\n//           required\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder={editId ? \"New Password (optional)\" : \"Password\"}\n//           value={form.password}\n//           onChange={(e) => setForm({ ...form, password: e.target.value })}\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         />\n//         <select\n//           value={form.school_id}\n//           onChange={(e) => setForm({ ...form, school_id: e.target.value })}\n//           required\n//           className=\"border px-3 py-2 mr-2 rounded\"\n//         >\n//           <option value=\"\">Select School</option>\n//           {schools.map((s) => (\n//             <option key={s.id} value={s.id}>\n//               {s.name}\n//             </option>\n//           ))}\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n//           {editId ? \"Update\" : \"Add\"}\n//         </button>\n//       </form>\n\n//       {/* Admins Table */}\n//       <table className=\"min-w-full bg-white border rounded shadow\">\n//         <thead>\n//           <tr className=\"bg-gray-200 text-left\">\n//             <th className=\"py-2 px-4 border\">ID</th>\n//             <th className=\"py-2 px-4 border\">Username</th>\n//             <th className=\"py-2 px-4 border\">School</th>\n//             <th className=\"py-2 px-4 border\">Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {admins.map((admin) => (\n//             <tr key={admin.id}>\n//               <td className=\"py-2 px-4 border\">{admin.id}</td>\n//               <td className=\"py-2 px-4 border\">{admin.username}</td>\n//               <td className=\"py-2 px-4 border\">{admin.school_name}</td>\n//               <td className=\"py-2 px-4 border\">\n//                 <button\n//                   onClick={() => handleEdit(admin)}\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded mr-2\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => setDeleteId(admin.id)}\n//                   className=\"bg-red-600 text-white px-3 py-1 rounded\"\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Delete Modal */}\n//       {deleteId && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center\">\n//           <div className=\"bg-white p-6 rounded shadow-lg w-96\">\n//             <h2 className=\"text-xl font-semibold mb-4\">Confirm Delete</h2>\n//             <p className=\"mb-4\">Are you sure you want to delete this admin?</p>\n//             <div className=\"flex justify-end space-x-3\">\n//               <button\n//                 onClick={() => setDeleteId(null)}\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//               >\n//                 Cancel\n//               </button>\n//               <button\n//                 onClick={confirmDelete}\n//                 className=\"bg-red-600 text-white px-4 py-2 rounded\"\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// src/pages/ManageAdmins.js\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ManageAdmins.css\"; // ‚úÖ Import CSS\n\nexport default function ManageAdmins() {\n  const [admins, setAdmins] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [form, setForm] = useState({ username: \"\", password: \"\", school_id: \"\" });\n  const [editId, setEditId] = useState(null);\n  const [deleteId, setDeleteId] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  const role = localStorage.getItem(\"role\");\n\n  const headers = { Authorization: `Bearer ${token}` };\n\n  useEffect(() => {\n    if (role === \"superadmin\") {\n      fetchAdmins();\n      fetchSchools();\n    }\n  }, []);\n\n  const fetchAdmins = async () => {\n    try {\n      const res = await axios.get(\"https://gps.smartbus360.com/api/schooladmins\", { headers });\n      setAdmins(res.data);\n    } catch (err) {\n      console.error(\"Error fetching admins:\", err);\n    }\n  };\n\n  const fetchSchools = async () => {\n    try {\n      const res = await axios.get(\"https://gps.smartbus360.com/api/schools\", { headers });\n      setSchools(res.data);\n    } catch (err) {\n      console.error(\"Error fetching schools:\", err);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editId) {\n        await axios.put(\n          `https://gps.smartbus360.com/api/schooladmins/${editId}`,\n          form,\n          { headers }\n        );\n      } else {\n        await axios.post(\"https://gps.smartbus360.com/api/schooladmins\", form, { headers });\n      }\n      setForm({ username: \"\", password: \"\", school_id: \"\" });\n      setEditId(null);\n      fetchAdmins();\n    } catch (err) {\n      console.error(\"Error saving admin:\", err);\n    }\n  };\n\n  const confirmDelete = async () => {\n    try {\n      await axios.delete(`https://gps.smartbus360.com/api/schooladmins/${deleteId}`, { headers });\n      setDeleteId(null);\n      fetchAdmins();\n    } catch (err) {\n      console.error(\"Error deleting admin:\", err);\n    }\n  };\n\n  const handleEdit = (admin) => {\n    const school = schools.find((s) => s.name === admin.school_name);\n    setForm({\n      username: admin.username,\n      password: \"\",\n      school_id: school ? school.id : \"\",\n    });\n    setEditId(admin.id);\n  };\n\n  if (role !== \"superadmin\") {\n    return <p className=\"error-msg\">‚ö†Ô∏è Only Superadmin can manage admins.</p>;\n  }\n\n  return (\n    <div className=\"admins-container\">\n      <h1 className=\"page-title\">üë®‚Äçüíº Manage School Admins</h1>\n\n      {/* Add/Edit Form */}\n      <form onSubmit={handleSubmit} className=\"admin-form\">\n        <h2>{editId ? \"‚úèÔ∏è Edit Admin\" : \"‚ûï Add Admin\"}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={form.username}\n          onChange={(e) => setForm({ ...form, username: e.target.value })}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder={editId ? \"New Password (optional)\" : \"Password\"}\n          value={form.password}\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\n        />\n        <select\n          value={form.school_id}\n          onChange={(e) => setForm({ ...form, school_id: e.target.value })}\n          required\n        >\n          <option value=\"\">Select School</option>\n          {schools.map((s) => (\n            <option key={s.id} value={s.id}>\n              {s.name}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\" className=\"btn primary\">\n          {editId ? \"Update\" : \"Add\"}\n        </button>\n        {editId && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setForm({ username: \"\", password: \"\", school_id: \"\" });\n              setEditId(null);\n            }}\n            className=\"btn secondary\"\n          >\n            Cancel\n          </button>\n        )}\n      </form>\n\n      {/* Admins Table */}\n      {admins.length === 0 ? (\n        <p>No admins found.</p>\n      ) : (\n        <div className=\"table-card\">\n          <table className=\"admins-table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Username</th>\n                <th>School</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {admins.map((admin) => (\n                <tr key={admin.id}>\n                  <td>{admin.id}</td>\n                  <td>{admin.username}</td>\n                  <td>{admin.school_name}</td>\n                  <td>\n                    <button onClick={() => handleEdit(admin)} className=\"btn edit\">\n                      Edit\n                    </button>\n                    <button onClick={() => setDeleteId(admin.id)} className=\"btn delete\">\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {/* Delete Modal */}\n      {deleteId && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-box\">\n            <h2>Confirm Delete</h2>\n            <p>Are you sure you want to delete this admin?</p>\n            <div className=\"modal-actions\">\n              <button onClick={() => setDeleteId(null)} className=\"btn secondary\">\n                Cancel\n              </button>\n              <button onClick={confirmDelete} className=\"btn delete\">\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,IAAI,EAAEC,OAAO,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}